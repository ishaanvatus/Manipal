$date
	Fri Oct 13 17:33:03 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module graymux_tb $end
$var wire 4 ! b [3:0] $end
$var reg 4 " g [3:0] $end
$var integer 32 # i [31:0] $end
$scope module uut $end
$var wire 4 $ g [3:0] $end
$var wire 8 % h1 [7:0] $end
$var wire 8 & h2 [7:0] $end
$var wire 8 ' h3 [7:0] $end
$var wire 3 ( sel [2:0] $end
$var wire 8 ) h0 [7:0] $end
$var wire 4 * b [3:0] $end
$scope module bit0 $end
$var wire 3 + s [2:0] $end
$var wire 8 , w [0:7] $end
$var reg 1 - f $end
$var integer 32 . i [31:0] $end
$upscope $end
$scope module bit1 $end
$var wire 3 / s [2:0] $end
$var wire 8 0 w [0:7] $end
$var reg 1 1 f $end
$var integer 32 2 i [31:0] $end
$upscope $end
$scope module bit2 $end
$var wire 3 3 s [2:0] $end
$var wire 8 4 w [0:7] $end
$var reg 1 5 f $end
$var integer 32 6 i [31:0] $end
$upscope $end
$scope module bit3 $end
$var wire 3 7 s [2:0] $end
$var wire 8 8 w [0:7] $end
$var reg 1 9 f $end
$var integer 32 : i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b1000 :
09
b1111 8
b0 7
b1000 6
05
b111100 4
b0 3
b1000 2
01
b1101001 0
b0 /
b1000 .
0-
b1101001 ,
b0 +
b0 *
b1101001 )
b0 (
b1111 '
b111100 &
b1101001 %
b0 $
b0 #
b0 "
b0 !
$end
#20
b1 !
b1 *
1-
b1000 .
b10010110 )
b10010110 ,
b1 "
b1 $
b1 #
#40
1-
b1000 .
b11 !
b11 *
11
b1000 2
b1000 6
b1000 :
b1101001 )
b1101001 ,
b1 (
b1 +
b1 /
b1 3
b1 7
b10 "
b10 $
b10 #
#60
b10 !
b10 *
0-
b1000 .
b10010110 )
b10010110 ,
b11 "
b11 $
b11 #
#80
1-
b1000 .
b1000 2
b111 !
b111 *
15
b1000 6
b1000 :
b1101001 )
b1101001 ,
b10 (
b10 +
b10 /
b10 3
b10 7
b100 "
b100 $
b100 #
#100
b110 !
b110 *
0-
b1000 .
b10010110 )
b10010110 ,
b101 "
b101 $
b101 #
#120
b1000 .
b100 !
b100 *
01
b1000 2
b1000 6
b1000 :
b1101001 )
b1101001 ,
b11 (
b11 +
b11 /
b11 3
b11 7
b110 "
b110 $
b110 #
#140
b101 !
b101 *
1-
b1000 .
b10010110 )
b10010110 ,
b111 "
b111 $
b111 #
#160
1-
b1000 .
11
b1000 2
b1000 6
b1111 !
b1111 *
19
b1000 :
b1101001 )
b1101001 ,
b100 (
b100 +
b100 /
b100 3
b100 7
b1000 "
b1000 $
b1000 #
#180
b1110 !
b1110 *
0-
b1000 .
b10010110 )
b10010110 ,
b1001 "
b1001 $
b1001 #
#200
b1000 .
b1100 !
b1100 *
01
b1000 2
b1000 6
b1000 :
b1101001 )
b1101001 ,
b101 (
b101 +
b101 /
b101 3
b101 7
b1010 "
b1010 $
b1010 #
#220
b1101 !
b1101 *
1-
b1000 .
b10010110 )
b10010110 ,
b1011 "
b1011 $
b1011 #
#240
0-
b1000 .
b1000 2
b1000 !
b1000 *
05
b1000 6
b1000 :
b1101001 )
b1101001 ,
b110 (
b110 +
b110 /
b110 3
b110 7
b1100 "
b1100 $
b1100 #
#260
b1001 !
b1001 *
1-
b1000 .
b10010110 )
b10010110 ,
b1101 "
b1101 $
b1101 #
#280
1-
b1000 .
b1011 !
b1011 *
11
b1000 2
b1000 6
b1000 :
b1101001 )
b1101001 ,
b111 (
b111 +
b111 /
b111 3
b111 7
b1110 "
b1110 $
b1110 #
#300
b1010 !
b1010 *
0-
b1000 .
b10010110 )
b10010110 ,
b1111 "
b1111 $
b1111 #
#320
b10000 #
